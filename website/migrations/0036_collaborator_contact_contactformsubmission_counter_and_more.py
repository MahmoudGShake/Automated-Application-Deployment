# Generated by Django 5.2.5 on 2025-10-04 18:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0035_image_image_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='collaborator_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactFormSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satisfied_clients', models.IntegerField(blank=True, null=True)),
                ('successful_projects', models.IntegerField(blank=True, null=True)),
                ('scientific_publications', models.IntegerField(blank=True, null=True)),
                ('collaborating_countries', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FrequentlyAskedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('type', models.CharField(choices=[('faqlist1', 'FAQ List 1'), ('faqlist2', 'FAQ List 2')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PulseHub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='testimonial_images/')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('stars', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='homearticle',
            name='title',
        ),
        migrations.RemoveField(
            model_name='image',
            name='category',
        ),
        migrations.AddField(
            model_name='article',
            name='pin',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='article',
            name='pin_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='category',
            name='redirect_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='redirect_categories', to='website.article'),
        ),
        migrations.AddField(
            model_name='category',
            name='redirect_tag_id',
            field=models.CharField(blank=True, choices=[('hero', 'Hero tag(first tag in the index page)'), ('footer', 'Footer tag(last tag in the index page)'), ('contact', 'Contact Tag)'), ('counts', 'Counts Tag)'), ('news', 'News Tag)'), ('clients', 'clients(Collaborators) Tag)'), ('testimonials', 'Testimonials Tag)')], max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='homearticle',
            name='type',
            field=models.CharField(blank=True, choices=[('hero', 'Hero Article'), ('about', 'About Article')], max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='newslettersubscription',
            name='articles',
            field=models.ManyToManyField(related_name='newsletter_subscription_articles', to='website.article'),
        ),
        migrations.AlterField(
            model_name='homearticle',
            name='link',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='homearticle',
            name='link_text',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='ContactAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_address', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='website.contact')),
            ],
        ),
        migrations.CreateModel(
            name='ContactRegistrationNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_title1', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number1', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_title2', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number2', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_title3', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number3', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_numbers', to='website.contact')),
            ],
        ),
        migrations.CreateModel(
            name='ContactTelephone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telephones', to='website.contact')),
            ],
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('articles', models.ManyToManyField(related_name='newsletter_articles', to='website.article')),
            ],
        ),
    ]
